<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:c='http://www.springframework.org/schema/c'
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<context:component-scan base-package="com.yunda.rediscache"/>
	<cache:annotation-driven cache-manager="cacheManager"/>
	
 	<bean id="config" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>redis.properties</value>
			</list>
		</property>
	</bean>
	
<!-- ========================================================= -->
<!-- redis缓存 -->
<!-- ========================================================= -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">    
	    <property name="maxActive"     value="${redis.pool.maxActive}" />    
	    <property name="maxIdle"       value="${redis.pool.maxIdle}" />    
	    <property name="maxWait"       value="${redis.pool.maxWait}" />    
	    <property name="testOnBorrow"  value="${redis.pool.testOnBorrow}" /> 
	</bean> 
	<!-- Jedis ConnectionFactory -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
	    <property name="hostName"   value="${redis.ip}" />    
	    <property name="port"       value="${redis.port}" />
	    <property name="timeout"    value="${redis.timeout}" />
	    <constructor-arg index="0"  ref="jedisPoolConfig" /> 
	</bean>   
    <!-- redis template definition -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    	<property name="connectionFactory" ref="jedisConnectionFactory" /> 
    </bean>
    
	<!-- declare Redis Cache Manager -->  
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"  
        c:template-ref="redisTemplate">
    </bean>
    
    <!-- cache:用于测试 -->
    <bean id="redisCache" class="com.yunda.rediscache.cache.RedisCacheImpl">
    	<!--  
    	<property name="serializer">
            <bean class="com.yunda.rediscache.common.serializer.JsonSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JsonSerializer" />
        </property> 
    	<constructor-arg index="0"  value="${appName}" /> -->
    </bean>
</beans>